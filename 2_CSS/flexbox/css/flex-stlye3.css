.flex-container{
    height: 400px;
    background-color: #ddd;
    display: flex;
}

/* 
    order
    각 item의 순서를 지정하는 속성
    (기본값 0, 정수, 양수/ 음수 가능 )

*/

.order1{order:1;}
.order2{order:2;}
.order3{order:3;}
.order4{order:4;}
.order5{order:5;}

/*
    flex-grow
    item들이 flex-container내부에서 비어있는 공간을 매꿀 수 있도록 
    팽창하는 정도를 지정하는 속성 
    (기본값 0 -> 팽창 x)
*/
/* flex-grow: 팽창비율; */
.grow1{flex-grow: 1;}
.grow2{flex-grow: 2;}
.grow3{flex-grow: 3;}
.grow4{flex-grow: 4;}

/* 
    flex-shrink
    item이 수축하는 정도를 지정하는 속성(기본값1)

*/
.shrink1{flex-shrink: 1;}
.shrink2{flex-shrink: 2;}
.shrink3{flex-shrink: 3;} /* 높을수록 가장 빨리 찌그러짐 */
.shrink4{flex-shrink: 0;} /* 수축 정도를 0으로 설정해놓아서 화면이 들어들어도 수축하지 않음.*/


/* 
    flex-basis 
    : 중심축 기준 점유율(크기)를 지정하는 속성
      (각종 크기 단위 기술 가능 : px, vh, vw, %, em)
      
*/

.basis-150px{flex-basis: 150px;}
.basis-10{flex-basis: 10%;}
.basis-25vw{flex-basis: 25vw;}
.basis-50{flex-basis: 50%;}

/* 
    flex
    flex-grow, shrink, basis를 동시에 지정하는 속성
*/
.flex{flex: 0 0 100px}

/* item별로 교차축 방향으로 정렬을 지정하는 속성 */
.self-start{align-self: flex-start;}
.self-end{align-self: flex-end;}
.self-center{align-self: center;}

